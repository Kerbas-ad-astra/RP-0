//prevents experiment being used until repaired
@PART[*]:HAS[@MODULE[ModuleScienceExperiment]]:FOR[TestFlight]
{
	%MODULE[TestFlightInterop]
	{
		%name = TestFlightInterop
	}
	MODULE
	{
		name = TestFlightCore
		title = #$../title$ (Instrument)
		configuration = #$../MODULE[ModuleScienceExperiment]/experimentID$
		startFlightData = 0
		maxData = 10000
	}
	MODULE
	{
		name = FlightDataRecorder_Science
		flightDataEngineerModifier = 0
		flightDataMultiplier = 2
		configuration = #$../MODULE[ModuleScienceExperiment]/experimentID$
	}
	MODULE
	{
		name = TestFlightReliability
		configuration = #$../MODULE[ModuleScienceExperiment]/experimentID$
		reliabilityCurve
		{
			key = 0 0.01
			key = 10000 0.001
		}
	}
	MODULE
	{
		name = TestFlightFailure_ScienceBroken
		configuration = #$../MODULE[ModuleScienceExperiment]/experimentID$
		weight = 8
		failureType = hardware
		failureTitle = Instrument damaged
		duRepair = 250
		duFail = 100
		severity = failure
		REPAIR
		{
			canBeRepairedInFlight = True
			canBeRepairedOnSplashed = True
			canBeRepairedByRemote = False
			repairChance = 50
		}
	}
}
@PART[*]:HAS[@MODULE[ModuleRTAntenna]]:FOR[TestFlight]
{
	%MODULE[TestFlightInterop]
	{
		%name = TestFlightInterop
	}
	MODULE
	{
		name = TestFlightCore
		title = #$../title$ (TxRx)
		startFlightData = 0
		maxData = 10000
	}
	MODULE
	{
		name = FlightDataRecorder_RT
		flightDataEngineerModifier = 0
		flightDataMultiplier = 2
	}
	MODULE
	{
		name = TestFlightReliability
		reliabilityCurve
		{
			key = 0 0.001
			key = 10000 0.0001
		}
	}
	MODULE
	{
		name = TestFlightFailure_RemoteBroken
		weight = 8
		failureType = hardware
		failureTitle = TxRx failure
		duRepair = 250
		duFail = 100
		severity = failure
		REPAIR
		{
			canBeRepairedInFlight = True
			canBeRepairedOnSplashed = True
			canBeRepairedByRemote = False
			repairChance = 75
		}
	}
}